#!/usr/bin/env node

/**\n * Simple MCP server test to debug connection issues\n */\n\nimport { Server } from '@modelcontextprotocol/sdk/server/index.js';\nimport { StdioServerTransport } from '@modelcontextprotocol/sdk/server/stdio.js';\n\n// Create a minimal server\nconst server = new Server(\n  {\n    name: 'test-mcp-server',\n    version: '1.0.0',\n  },\n  {\n    capabilities: {\n      tools: {},\n    },\n  }\n);\n\n// Add error handler\nserver.onerror = (error) => {\n  console.error('[MCP Error]', error);\n};\n\n// Add a simple handler to debug\nserver.setRequestHandler({ method: 'tools/list' }, async () => {\n  console.error('[MCP] Received tools/list request');\n  return {\n    tools: [\n      {\n        name: 'test_tool',\n        description: 'A test tool',\n        inputSchema: {\n          type: 'object',\n          properties: {\n            message: { type: 'string' }\n          }\n        }\n      }\n    ]\n  };\n});\n\nasync function run() {\n  try {\n    console.error('[MCP] Starting minimal test server...');\n    const transport = new StdioServerTransport();\n    await server.connect(transport);\n    console.error('[MCP] Test server connected and ready');\n  } catch (error) {\n    console.error('[MCP] Failed to start:', error);\n    process.exit(1);\n  }\n}\n\nrun().catch(console.error);\n